// This file is generated by Firebase Extensions.
//
// Please do not edit directly.
'use server';

/**
 * @fileOverview AI agent providing wellness tips, including meditation and yoga pose suggestions.
 *
 * - suggestWellnessTip - A function that suggests a wellness tip based on user input.
 * - SuggestWellnessTipInput - The input type for the suggestWellnessTip function.
 * - SuggestWellnessTipOutput - The return type for the suggestWellnessTip function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestWellnessTipInputSchema = z.object({
  query: z
    .string()
    .describe(
      'The user query for a wellness tip, such as a request for a meditation or yoga pose suggestion.'
    ),
});
export type SuggestWellnessTipInput = z.infer<typeof SuggestWellnessTipInputSchema>;

const SuggestWellnessTipOutputSchema = z.object({
  suggestion: z
    .string()
    .describe(
      'A suggestion for a quick meditation or yoga pose to help the user relax and improve their mental well-being.'
    ),
});
export type SuggestWellnessTipOutput = z.infer<typeof SuggestWellnessTipOutputSchema>;

export async function suggestWellnessTip(input: SuggestWellnessTipInput): Promise<SuggestWellnessTipOutput> {
  return suggestWellnessTipFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestWellnessTipPrompt',
  input: {schema: SuggestWellnessTipInputSchema},
  output: {schema: SuggestWellnessTipOutputSchema},
  prompt: `You are a wellness guide providing quick meditation or yoga pose suggestions based on user queries.

  Respond to the following query with a specific, actionable suggestion:

  Query: {{{query}}}
  `,
});

const suggestWellnessTipFlow = ai.defineFlow(
  {
    name: 'suggestWellnessTipFlow',
    inputSchema: SuggestWellnessTipInputSchema,
    outputSchema: SuggestWellnessTipOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
